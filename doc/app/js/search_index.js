var search_data = {"index":{"searchIndex":["admincontroller","adminhelper","applicationcontroller","applicationhelper","group","groupmailer","groupscontroller","groupshelper","homecontroller","homehelper","oops","user","usermailer","userscontroller","usershelper","about()","after_sign_in_path_for()","after_sign_out_path_for()","configure_permitted_parameters()","contact()","create()","create()","create_notify()","destroy()","destroy()","display_alert()","display_error()","edit()","edit()","get_owner_email()","help()","index()","index()","index()","index()","invite_member()","layout_by_resource()","lookup_users()","member_email()","members()","members=()","members_list()","new()","new()","new_account()","notify()","oops()","owned_resources()","password_reset()","relate_resources()","remove_member()","role_str()","show()","show()","support()","unrelate_resources()","update()","update()","readme"],"longSearchIndex":["admincontroller","adminhelper","applicationcontroller","applicationhelper","group","groupmailer","groupscontroller","groupshelper","homecontroller","homehelper","oops","user","usermailer","userscontroller","usershelper","homecontroller#about()","applicationcontroller#after_sign_in_path_for()","applicationcontroller#after_sign_out_path_for()","applicationcontroller#configure_permitted_parameters()","homecontroller#contact()","groupscontroller#create()","userscontroller#create()","groupscontroller#create_notify()","groupscontroller#destroy()","userscontroller#destroy()","oops#display_alert()","oops#display_error()","groupscontroller#edit()","userscontroller#edit()","groupshelper#get_owner_email()","admincontroller#help()","admincontroller#index()","groupscontroller#index()","homecontroller#index()","userscontroller#index()","groupscontroller#invite_member()","applicationcontroller#layout_by_resource()","groupscontroller#lookup_users()","groupmailer#member_email()","group#members()","group#members=()","group#members_list()","groupscontroller#new()","userscontroller#new()","usermailer#new_account()","groupscontroller#notify()","admincontroller#oops()","groupscontroller#owned_resources()","admincontroller#password_reset()","groupscontroller#relate_resources()","groupscontroller#remove_member()","user#role_str()","groupscontroller#show()","userscontroller#show()","homecontroller#support()","groupscontroller#unrelate_resources()","groupscontroller#update()","userscontroller#update()",""],"info":[["AdminController","","AdminController.html","",""],["AdminHelper","","AdminHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Group","","Group.html","",""],["GroupMailer","","GroupMailer.html","",""],["GroupsController","","GroupsController.html","","<p>The GroupsController is responsible for managing the actions  associated\nwith managing user groups that …\n"],["GroupsHelper","","GroupsHelper.html","",""],["HomeController","","HomeController.html","",""],["HomeHelper","","HomeHelper.html","",""],["Oops","","Oops.html","","<p>The Oops module provides utility methods for handling redirection to an\nerror page. The module can be …\n"],["User","","User.html","",""],["UserMailer","","UserMailer.html","",""],["UsersController","","UsersController.html","","<p>The UsersController is the administrative controller for managing users of\nthe web service. It is targeted …\n"],["UsersHelper","","UsersHelper.html","",""],["about","HomeController","HomeController.html#method-i-about","()",""],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource)","<p>The after_sign_in_path_for method will check to see if there the user needs\nto fill out their profile …\n"],["after_sign_out_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_out_path_for","(resource)","<p>A Devise method override that redirects the user to the home_url after they\nhave signed out the system. …\n"],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()","<p>Devise strong parameters method for allowing additional attributes to be\nmass updated in the User model. …\n"],["contact","HomeController","HomeController.html#method-i-contact","()",""],["create","GroupsController","GroupsController.html#method-i-create","()","<p>POST /groups POST /groups.json\n<p>The create method will create the group add the current user to  the group.\n…\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /admin/users\n<p>The create enables creation of a new user account by a service \nadministrator. Once …\n"],["create_notify","GroupsController","GroupsController.html#method-i-create_notify","(members, group)","<p>The create_notify method will take a hash of email addresses and User\nrecords. For each email address …\n"],["destroy","GroupsController","GroupsController.html#method-i-destroy","()","<p>DELETE /groups/1 DELETE /groups/1.json\n<p>The standard destroy action with a call to unrelate all resources …\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /admin/users/:id\n<p>The destory action will delete the user. The user model should also include\nany …\n"],["display_alert","Oops","Oops.html#method-i-display_alert","(args)","<p>The display_alert method will display an alert message to an error page. It\ntakes a hash as an argument, …\n"],["display_error","Oops","Oops.html#method-i-display_error","(msg)","<p>The display_error method will display an error message to an error page. It\ntakes a hash as an argument, …\n"],["edit","GroupsController","GroupsController.html#method-i-edit","()","<p>GET /groups/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /admin/users/:id\n<p>The edit action will display a standard edit form for user account.\n"],["get_owner_email","GroupsHelper","GroupsHelper.html#method-i-get_owner_email","(group)","<p>The get_owner is a view helper method that will return either the email\naddress of the group owner or …\n"],["help","AdminController","AdminController.html#method-i-help","()","<p>The help function will present a help page for the service.\n"],["index","AdminController","AdminController.html#method-i-index","()","<p>The index action presents the dashboard or main landing page after logging\ninto the service.\n"],["index","GroupsController","GroupsController.html#method-i-index","()","<p>GET /groups GET /groups.json\n<p>Standard listing of user groups and membership.\n"],["index","HomeController","HomeController.html#method-i-index","()",""],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /admin/users\n<p>The index action will present a list of system users. It will allow the\nsystem administrator …\n"],["invite_member","GroupsController","GroupsController.html#method-i-invite_member","(group, user)","<p>The invite_member method will resend an membership notification  to an\nexisting member. If the member …\n"],["layout_by_resource","ApplicationController","ApplicationController.html#method-i-layout_by_resource","()","<p>Callback function to specify the layout based on the controller that is in\nuse.\n"],["lookup_users","GroupsController","GroupsController.html#method-i-lookup_users","(group)","<p>The lookup_user method will take an string of white-space separated email\naddresses and return a hash …\n"],["member_email","GroupMailer","GroupMailer.html#method-i-member_email","(user, password, group)","<p>The member_email method will notify a new member of a group that he/she has\nbeen added by the group owner. …\n"],["members","Group","Group.html#method-i-members","()","<p>VIRTUAL ATTRIBUTE METHDS\n<p>The members and the members= are methods for creating virtual  attributes\nthat …\n"],["members=","Group","Group.html#method-i-members-3D","(value)",""],["members_list","Group","Group.html#method-i-members_list","()","<p>The members_list method will parse the membership list of email addresses\ncheck them for valid email …\n"],["new","GroupsController","GroupsController.html#method-i-new","()","<p>GET /groups/new\n<p>Since we support a resource based authorization system, the new method\nshould show the …\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /admin/users/new\n<p>The new action enables an administrator create a new user account. It\npresents a …\n"],["new_account","UserMailer","UserMailer.html#method-i-new_account","(user)","<p>Email for new user account. It will email the user their login, password, a\nlogin link, and a link to …\n"],["notify","GroupsController","GroupsController.html#method-i-notify","()","<p>PUT /groups/1/notify\n<p>The notify method will resend a group invite notification message to a\nsingle group …\n"],["oops","AdminController","AdminController.html#method-i-oops","()","<p>Error action and view to display errors to the user.\n"],["owned_resources","GroupsController","GroupsController.html#method-i-owned_resources","()","<p>The owned_resource method will set an instance variable called  @resources\nto hold an array of hashes. …\n"],["password_reset","AdminController","AdminController.html#method-i-password_reset","()","<p>Password_reset presents the password reset page.\n"],["relate_resources","GroupsController","GroupsController.html#method-i-relate_resources","(resources)","<p>The relate_resources method will relate the requested resources to  the\ngroup. It is expecting an array …\n"],["remove_member","GroupsController","GroupsController.html#method-i-remove_member","()","<p>PUT groups/1/remove_member\n<p>The remove_member method will remove one group member.\n"],["role_str","User","User.html#method-i-role_str","()","<p>The role_str returns the string representation of the role assigned to the\nuser.\n"],["show","GroupsController","GroupsController.html#method-i-show","()","<p>GET /groups/1 GET /groups/1.json\n<p>Shows the group information and the list of group members. It also  allows\n…\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /admin/users/:id\n<p>The show action displays the user record and a subset of the fields. It\ndoes not …\n"],["support","HomeController","HomeController.html#method-i-support","()",""],["unrelate_resources","GroupsController","GroupsController.html#method-i-unrelate_resources","()","<p>The unrelate_resources method will un-elate the all resources\n<p>from the group.\n<p>You will need to customize …\n"],["update","GroupsController","GroupsController.html#method-i-update","()","<p>PATCH/PUT /groups/1 PATCH/PUT /groups/1.json\n<p>The update action allows the user to update the group attributes, …\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>UPDATE /admin/users/:id\n<p>The update method will modify the submitted attributes of the User record.\n"],["README","","README_rdoc.html","","<p>Ignition\n<p>The Ignition project is a small effort to provide a Quickstart framework\nfor building online …\n"]]}}